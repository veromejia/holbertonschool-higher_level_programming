The ``7-base_geometry`` module
============================

Using ``base_geometry``
---------------------

Import Class:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", "12")
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("my_int", 0)
    Traceback (most recent call last):
    ValueError: my_int must be greater than 0

    >>> bg.integer_validator("float", 12.5)
    Traceback (most recent call last):
    TypeError: float must be an integer

    >>> bg.integer_validator("list", [1, 2, 3])
    Traceback (most recent call last):
    TypeError: list must be an integer

    >>> bg.integer_validator("nan", float('nan'))
    Traceback (most recent call last):
    TypeError: nan must be an integer

    >>> bg.integer_validator("my_int", (2,))
    Traceback (most recent call last):
    TypeError: my_int must be an integer

    >>> bg.integer_validator("tuple", (1,2))
    Traceback (most recent call last):
    TypeError: tuple must be an integer

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("my_int")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'
